!::
! New Game (Shell)
!::
constant GAME_TITLE	"GAME TITLE"

!:: Flags
#set BETA                ! Compile with the comments-in-transcripts library
                          !   addition (requires "beta.h")
!#set CHEAPGLK
!#set GLK                 ! Compile with glk checks
!#set HUGOFIX             ! Compile with HugoFix Debugging Library commands
                          !   available (type $? in game)
!#set PRECOMPILED_LIBRARY ! Use a precompiled header library (see manual)
!#set VERBSTUBS           ! Include the grammar and routines from verbstubs.g
                          !   and verbstubs.h, respectively
!#set USE_ATTACHABLES     ! Use attachable items
!#set USE_PLURAL_OBJECTS  ! Use plural objects
!#set USE_VEHICLES        ! Use vehicle objects
!$set VERSIONS            ! Print library versions at compile time

!:: switches              ! example how one can add compiler switches to source
!#switches -ls            ! print compilation stats to .LST file

#ifset HUGOFIX
#set DEBUG
#endif

!:: Other pre-Hugolib.h Constants
! (some constants must be set before hugolib is included)

!constant AFTER_PERIOD " "     ! include one space after full stops (as opposed
                               !   to two)
!constant INDENT_SIZE 0        ! no indentation in room descriptions and room
                               !   content listings

!:: Grammar Library Inclusions (grammar must come first)
! put your new grammar here
!#include "newgrammar.g"
! new grammar needs to be defined before the including verblib
#include "verblib.g"     ! Verb Library

#include "hugolib.h"     ! Standard Hugo Library
!#include "roodylib.h"      ! Hugo Library Updates
!#include "moreverbs.h"   ! new verbs
!#include "newmessages.h" ! new messages

!::	Other Library Inclusions
#ifset BETA
#include "beta.h"
#endif

#ifset GLK
#include "glk.h"
#endif

#ifset CHEAPGLK
#include "cheapglk.h"
#endif

!:: Other constants and global variables
!constant IFID "put-IFID here"

!::	Game Initialization	routine
routine	init
{

!	Init_Calls
!	word[1] = ""
	MAX_SCORE = 0   ! ready to change for a scored game
	STATUSTYPE = 0  ! 0 = none :: 1 = score/turns :: 2 = time
	counter = -1    ! 1 step before first turn
!\ STATUSTYPE -
    If STATUSTYPE = 2 (time), counter is minutes since midnight, so a game
    that starts at 3 pm should have:
    counter = 899
    (900 minutes minus the one minute the main routine will add on the first
    turn)
\!
	TEXTCOLOR =	DEF_FOREGROUND
	BGCOLOR	= DEF_BACKGROUND
	SL_TEXTCOLOR = DEF_SL_FOREGROUND
	SL_BGCOLOR = DEF_SL_BACKGROUND
	color TEXTCOLOR, BGCOLOR

	verbosity =	2
!\ VERBOSITY -
! 1	= normal (rooms	described only if not previously described)
! 2	= full (rooms described	every time they	are	entered)
\!

#if	defined	GAME_TITLE
	display.title_caption =	GAME_TITLE	!
! display.title_caption - used for GUI clients for title bar text.
#endif
	prompt = ">"
	player = you
	location = STARTLOCATION
!	Init_Calls
	Betainit
	window 0 ! resets the windows in case the player is	restarting a game
	cls

#ifset GLK
	glkcheck
#endif

	DEFAULT_FONT = PROP_ON
	Font(DEFAULT_FONT)

	!::	Opening	Text
	"Intro to game"
	print ""	! For a	blank line between the intro and the game title

	Font(BOLD_ON)
	"Game Title"
	Font(BOLD_OFF)
	"Game Blurb"
#ifset BETA
	string(_temp_string, serial$, 8)
	"beta build: \B20";
	StringPrint(_temp_string, 6, 8)
	StringPrint(_temp_string, 0, 2)
	StringPrint(_temp_string, 3, 5)
	"\b"
#endif
	print BANNER;
#ifset HUGOFIX
	print " (Now with HugoFix Technology TM!)"
#else
	print ""
#endif
#if	defined	IFID
		print IFID
#endif
#ifset BETA
	"\n(\INOTE: This beta release is intended for testing only, not for
   distribution to the general public. Please report any errors,
   bugs, etc. to the author. To make a comment, type \"\B* COMMENT TEXT\b\" at the prompt.\i)"
#endif
	move player	to location
	old_location = location
	FindLight(location)
	DescribePlace(location)
	location is	visited
	CalculateHolding(player)

#ifset USE_PLURAL_OBJECTS
	InitPluralObjects
#endif
}

!::	Main game loop
routine	main
{
	counter	= counter +	1
	run	location.each_turn
	runevents
	RunScripts
	if speaking	not	in location
		speaking = 0
	PrintStatusLine
}

player_character you "you"
{
}

room STARTLOCATION "Start Location"
{
}