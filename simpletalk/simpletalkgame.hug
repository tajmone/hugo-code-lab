!::
! Phototalk example game
!
!:: Flags

!:: switches              ! example how one can add compiler switches to source
!#switches -ls            ! print compilation stats to .LST file

#ifset HUGOFIX
#set DEBUG
#endif

#ifset HDX
#switches -d              ! if the -d switch is not set in the compiler itself, #set HDX will produce
                          ! a Hugo Debuggable Executable (.HDX) with extension .HEX
#endif                    ! Sneaky!


!:: Constants and globals  (some constants must be set before hugolib is included)


constant RELEASE "1.3"         ! Game release number

constant AFTER_PERIOD " "     ! include one space after full stops (as opposed to two)
!constant IFID "put-IFID here"

!:: Includes (grammar must come first)
! put your new grammar here

verb "phototalk"
verb "phototalk"
     * xobject                           DoTalk
	* "to" xobject					 DoTalk

! new grammar needs to be defined before the including verblib
#include "verblib.g"    ! Verb Library

#ifset PRECOMPILED_LIBRARY
#link "hugolib.hlb"     ! Your Precompiled Library
#else
#include "hugolib.h"    ! Standard Hugo Library
#endif

#include "simpletalk.h"
!----------------------------------------------------------------------------
! Set up the quip declarations

array qflag[100]  			! Total number of quips in the game
array quips[5] = 20, 20, 20, 20, 20 	! 5 = number of characters, the 20s are how many quips are alloted to each

!:: Game Initialization routine
routine init
{
	   MAX_SCORE = 300
	   ranking[0] = "Limey Bastard"
	   ranking[1] = "Neophyte"
    	ranking[2] = "Master of Souls"
	   TEXTCOLOR 	= WHITE
	   BGCOLOR 	= BLACK
	   SL_TEXTCOLOR    = BLACK
	   SL_BGCOLOR      = WHITE
	   FORMAT 		= NOINDENT_F + LIST_F
        STATUSTYPE = 1  ! 0 = none :: 1 = score/turns :: 2 = time
        counter = -1    ! 1 step before first turn

        color TEXTCOLOR, BGCOLOR

        verbosity = 2   ! 1 = normal (rooms described only if not previously
                        !     described)
                        ! 2 = full (rooms described every time they are entered)

        display.title_caption = "phototalk.h game"  ! used for GUI clients for title bar text.
        prompt = ">"

        window 0 ! resets the windows in case the player is restarting a game
        cls

        DEFAULT_FONT = PROP_ON
        Font(DEFAULT_FONT)

        !:: Opening Text
        "\n\"Initial text goes here.\""
        print ""    ! For a blank line between the intro and the game title

	   Version
	   "\n\"Secondary text goes here.\""

        player = you
        location = bedroom
			loop_talk = true
			can_quit = true
        move player to location
        old_location = location
        FindLight(location)
        DescribePlace(location)
        location is visited
        CalculateHolding(player)

        #ifset USE_PLURAL_OBJECTS
        InitPluralObjects
        #endif

	   SetUpQuips
}

!:: Main game loop
#ifset PRECOMPILED_LIBRARY
replace main
{
#else
routine main
{
#endif
        counter = counter + 1
        PrintStatusLine
        run location.each_turn
        runevents
        RunScripts
        if speaking not in location
                speaking = 0
}

routine SetUpQuips
{
SetQuip(1,0,1)
SetQuip(1,1,1)
SetQuip(1,2,0)
SetQuip(1,3,1)
SetQuip(2,0,1)
SetQuip(2,1,1)
SetQuip(2,2,1)
}

player_character you "you"
{
	charnumber 999
	long_desc
	{
		"You are a rather meager specimen of humanity."
	}
}

room bedroom "Bedroom"
{
	long_desc
	{
		"You are within your bedroom."
	}
}

character Brendon "Brendon"
{
charnumber 1

	in bedroom
	nouns "brendon" "mccollough" "fighter" "warrior"
	adjective "brendon"
	parse_rank 1
	long_desc
		"Brendon is a handsome, healthy warrior of some small local acclaim."
}

character dwarf "dwarf"
{
charnumber 2

	in bedroom
	nouns "dwarf" "fighter"
	adjective "little"
	parse_rank 1
	long_desc
		"The little dwarf is a mean, violent pug."
}

routine SayQ (char, line)
{
	select(char)
	case 1
		{
		select(line)
		case 0: {">This is the first thing you can say to char one."}
		case 1: {">This is the second thing you can say to char one."}
		case 2: {"Not available."}
		case 3: {">This is the fourth thing you can say to char one."}
		}
	case 2
		{
		select(line)
		case 0: {">This is the first thing you can say to char two."}
		case 1: {">This is the second thing you can say to char two."}
		case 2: ">Tell me about Brendon's quips."
		}
}

routine Respond (char_num, line)
{
	local dont_remove
	select char_num
	case 1
	{
		select line
		case 0: "This is the first response from character number one."
		case 1: "This is the second response from character number one."
		case 2: "Not available."
		case 3
		{
			if not BeenSpoken(speaking,line)
				"This is the fourth response from character number one."
			else
				"This is the fourth response from character number one, AGAIN."
			dont_remove = true
		}
	}
	 case 2
		{
			select(line)
			case 0: "This is the first response from character number two."
			case 1: "This is the second response from character number two."
			case 2
			{
				"Brendon's first possible quip is ";
				if not QuipOn(Brendon,0)
					print "not ";
				"available and has ";
				if not BeenSpoken(Brendon,0)
					print "not ";
				"been spoken."
				"Brendon's third possible quip is ";
				if not QuipOn(Brendon,2)
					print "not ";
				"available and has ";
				if not BeenSpoken(Brendon,2)
					print "not ";
				"been spoken."
				dont_remove = true
			}
		}
! Let's turn off whichever quip we selected unless we set dont_remove to true
	if not dont_remove
		SetQuip(char_num,line,NOT_AVAILABLE,SPOKEN)
	else
		SetQuip(char_num,line,AVAILABLE,SPOKEN)
}


routine Version
{
	color LIGHT_RED
	print "\BSimpletalk\b"
	color TEXTCOLOR
	print "Release 1.1"
	print "Please use the verb phototalk instead of talk"
	print "\BType phototalk brendon to see it in action.\b"
	print "Any questions? http://www.joltcountry.com/phpBB2/viewforum.php?f=8"
}

replace PrintScore(end_of_game)
{
	if STATUSTYPE = 1 and MAX_SCORE
	{
		if end_of_game:  print ""
		print "You ";
		if not end_of_game
			print "have ";
		print "scored a total of ";
		print number score; " out of "; number MAX_SCORE;
		if ranking[0] ~= ""
		{
			print ", giving you the rank of ";

			! A complicated formula, since only
			! integer division is allowed:
			!
			local rank
			rank = (score*MAX_RANK)/MAX_SCORE
			if rank > MAX_RANK
				rank = MAX_RANK
			print ranking[rank];
		}
		print "."
	}
}