!::
! New Game (Shell)
!::
constant GAME_TITLE "NEW MENU SAMPLE GAME"
$MAXROUTINES = 340
!:: Flags
!#set BETA                ! Compile with the comments-in-transcripts library
#set HUGOFIX             ! Compile with HugoFix Debugging Library commands
                          !   available (type $? in game)
#set VERBSTUBS           ! Include the grammar and routines from verbstubs.g
                          !   and verbstubs.h, respectively
!#set USE_ATTACHABLES     ! Use attachable items
!#set USE_PLURAL_OBJECTS  ! Use plural objects
!#set USE_VEHICLES        ! Use vehicle objects
!$set VERSIONS            ! Print library versions at compile time
#set USE_ROODYLIB
!#set USE_DEFAULT_MENU
!#set NO_ACCESSIBILITY


#ifset HUGOFIX
#set DEBUG
#endif

!:: Other pre-Hugolib.h Constants
! (some constants must be set before hugolib is included)

!constant AFTER_PERIOD " "     ! include one space after full stops (as opposed
                               !   to two)
!constant INDENT_SIZE 0        ! no indentation in room descriptions and room
                               !   content listings

!:: Grammar Library Inclusions (grammar must come first)
xverb "about"
*								DoAbout
xverb "hints"
	*							DoHints
xverb "test"
	*							DoTest

xverb "test2"
	*                    DoTest2

#ifset USE_ROODYLIB
#include "roodylib.g"
#endif
! new grammar needs to be defined before the including verblib
#include "verblib.g"        ! Verb Library

#include "hugolib.h"        ! Standard  Hugo Library

#ifset USE_ROODYLIB
#include "roodylib.h"         ! Hugo  Library Updates
#endif

#include "newmenu.h"

!:: Other constants and global variables
!constant IFID "put-IFID here"

!::	Game Initialization	routine
routine init
{
!: First Things First
	SetGlobalsAndFillArrays
!: Screen clear section
#ifclear _ROODYLIB_H
	CenterTitle("Hugo Interactive Fiction")
	cls
#else
	SimpleIntro
	InitScreen
!: Set up any special libries
	Init_Calls
#endif
!: Game opening
	IntroText
	MovePlayer(location)
}


routine SetGlobalsAndFillArrays
{
!\ Uncomment and modify this section if your game has scoring and ranking.
	MAX_SCORE = 50
	ranking[0] = "Amateur Adventurer"
	ranking[1] = "Competent Door-Unlocker"
	ranking[2] = "Bomb-Meddling Adventurer"
	ranking[3] = "Master Magic Wand Finder"
	ranking[4] = "The Genuine Article Sample Game Solver"
	MAX_RANK = 4  \!

	counter = -1                    ! 1 turn before turn 0
	!ask_color = 0
	STATUSTYPE = 1   ! 1 = score/turns, 2 = time, 3 = moves: score:
	TEXTCOLOR = DEF_FOREGROUND
	BGCOLOR = DEF_BACKGROUND
	SL_TEXTCOLOR = DEF_SL_FOREGROUND
	SL_BGCOLOR = DEF_SL_BACKGROUND
	prompt = ">"
	DEFAULT_FONT = PROP_ON
	player = you
	location = STARTLOCATION
}

!::	Main game loop
routine main
{
	counter	= counter + 1
	run location.each_turn
	runevents
	RunScripts
#ifset _ROODYLIB_H
	SpeakerCheck
#else
	if parent(speaking) ~= location
		speaking = 0
#endif
	PrintStatusLine
#ifset _ROODYLIB_H
	Main_Calls
#endif
}


routine IntroText
{
	"Intro text goes here.\n"
#if defined DoVersion
	DoVersion
#endif
}

player_character you "you"
{
}

room STARTLOCATION "Start Location"
{
	long_desc
	{
		"This is the Start Location."
	}
	e_to eastroom
}

room eastroom "East Room"
{
	w_to STARTLOCATION
	long_desc
	{
		"Yay, you win!"
		endflag = 1
	}
}

#if defined SpecialKey
replace SpecialKey(end_type)
{
	if end_type = 1 and word[1] = "a"
		return word[1]
	else
		return 0
}

replace SpecialRoutine
{
	ShowPage(studiopass_hints)
}
#endif

routine DoAbout
{
	MakeMenu
	return false
}

routine DoHints
{
	MakeMenu(hint_menu)
}

#ifclear USE_DEFAULT_MENU
replace main_menu "TITLE OF YOUR MAIN MENU"
{
	title_gap 1
	options_gap 1
	inherits menu_category
}
#endif

option contact_choice "Contact"
{
	alt_title "How To Contact Me"
	in main_menu    ! which menu it is
	menu_text
	{
!		""
		Indent
		"Feel free to send me your thoughts and suggestions at roody.yogurt@gmail.com! What an amazing discourse we will have!"
	}
	priority 3
}

! How to put a blank spot in your menu
!  (won't show up in glk interpreters)
option blank_spot ""
{
	nearby
	option_available
	{
		if not CheapOrSimple
			return true
		else
			return false
	}
	priority 2
}

option after_choice "After Break"
{
	alt_title "How To Contact Me"
	in main_menu    ! which menu it is
	menu_text
	{
!		""
		Indent
		"Feel free to send me your thoughts and suggestions at roody.yogurt@gmail.com! What an amazing discourse we will have!"
	}
	priority 2
}

!option submenu_choice
!{
!	priority -1
!	in main_menu
!	menu_link	hint_menu
!}

menu_category hint_menu "Choice Leading To Your Submenu"
{
	alt_title "WHOA IT'S A HINT MENU"
	in main_menu
	title_gap 2 ! {return main_menu.title_gap}
	page_text_color BRIGHT_WHITE ! LIGHT_RED
	page_bg_color BLACK ! GREEN
	title_color YELLOW ! LIGHT_BLUE
	title_bg DARK_GRAY
}

hint_option studiopass_hints "How do I get on the studio lot?"
{
	in hint_menu
	hint1
	{
		"Movie studio security is on par with Area 51.  To get on
		the lot, you'll need a pass."
	}
	hint2
	{
		"There's a studio pass in the envelope that was slipped
		under the door of your hotel room."
	}
	hint3
	{
		"Drive to the studio lot.  Make sure you've got the pass
		handy.  Get out of the car and go north."
	}
}

routine DoTest
{
	ShowPage(contact_choice)
}


routine DoTest2
{
	ShowPage(studiopass_hints)
}